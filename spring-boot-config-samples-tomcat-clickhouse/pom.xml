<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2018 tomoncle
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>spring-boot-config-samples</artifactId>
        <groupId>com.tomoncle</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>spring-boot-config-samples-tomcat-clickhouse</artifactId>
    <dependencies>
        <!--  ########## springboot starter dependencies  ##########    -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--2.1.2版本的tomcat异步处理时会出现
            java.lang.IllegalStateException: Calling [asyncError()] is not valid for a request with Async state [MUST_DISPATCH]
            参考：https://github.com/spring-projects/spring-boot/issues/15057
            方法1.移除默认tomcat版本，升级 tomcat 到 9.0.29版本
            方法2.移除默认tomcat版本，使用jetty服务器
            -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <!-- optional为true表明该依赖只在当前项目使用,不会传递依赖-->
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!--  ########## spring boot config dependencies  ##########    -->
        <dependency>
            <groupId>com.tomoncle</groupId>
            <artifactId>spring-boot-config-autoscan</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tomoncle</groupId>
            <artifactId>spring-boot-config-errors</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tomoncle</groupId>
            <artifactId>spring-boot-config-swagger</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tomoncle</groupId>
            <artifactId>spring-boot-config-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tomoncle</groupId>
            <artifactId>spring-boot-config-druid</artifactId>
        </dependency>
        <!--数据库 clickhouse -->
        <!-- https://mvnrepository.com/artifact/ru.yandex.clickhouse/clickhouse-jdbc -->
        <dependency>
            <groupId>ru.yandex.clickhouse</groupId>
            <artifactId>clickhouse-jdbc</artifactId>
            <version>0.2.2</version>
        </dependency>
        <!--Test-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>


    <build>
        <!--https://docs.spring.io/spring-boot/docs/current/maven-plugin/index.html-->
        <finalName>network-traffic-analysis-provider</finalName>
        <!--jar包打包配置，引入配置文件-->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                    <include>**/*.yaml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!--jar包打包配置-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--这个要使用parent.RELEASE版本-->
                <!--
                因为没有继承了spring-boot-starter-parent这个parent POM（详见13.2.2. https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-maven-without-a-parent）
                导致spring-boot-maven-plugin的配置项丢失，
                使得打包后的jar中的MANIFEST.MF文件缺少Main-Class。
                所以需要额外配置以下executions标签，
                如果继承了spring-boot-starter-parent这个parent POM，
                则不需要配置以下executions标签，只需要配置该plugin就行
                -->
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>com.tomoncle.app.ck.CKApplication</mainClass>
                    <!--<layout>ZIP</layout>-->
                    <!--<jvmArguments>-->
                    <!---Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005-->
                    <!--</jvmArguments>-->
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>